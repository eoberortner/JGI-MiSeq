#!/usr/bin/env perl
#!/jgi/tools/bin/perl -w
use strict;
use Getopt::Long;
use File::Basename;
use File::Spec;
use GT::Config;

my ( $bam_file, $depth_file, $index_file, $help );

#my $sam_fill_bin = '/jgi/tools/groups/gentech/phoebetest/bin/sam_fill_in_depth';

my $sam_fill_bin = 'sam_fill_in_depth';

GetOptions( 
  'bam=s'       => \$bam_file,
  'out|depth=s' => \$depth_file,
  'idx=s'       => \$index_file,
  'help'        => \$help,
) or die $!;

$bam_file ||= shift;

my $c = GT::Config->new();

if ( ! defined $index_file ) {
	my $path = ( File::Spec->splitpath ( $bam_file ) )[ 1 ];
  $path = '.' unless( $path );
  if (  -e "$path/config.yml" ) {
    $c->load( "$path/config.yml" );
    $index_file = "$c->{ref_fasta}.fai";
	}
}

if ( $help
   || ! defined $bam_file || ! -e $bam_file 
   || !defined $index_file || ! -e $index_file  || ! defined $depth_file ) {

  my $bin = basename $0;
	print STDERR <<EOH;

Usage: $bin [ options ] my.bam

   -idx    index file name ( .fai of reference will work ) [ ref_list.txt ]
   -out    depth file output name [ my.bam.depth ]
   -depth  synonym for -out

   depth file will be bgzipped and tabix indexed
   tabix my.bam.depth.gz ctg1:1-30  > depth.of.bases.1.to.30.on.ctg1

EOH
  exit;
}

if ( ! ( $depth_file =~ /[.]gz$/ ) ) {
  $depth_file .= '.gz';
}

my $cmd;
my $dict_file = $index_file;
$dict_file    =~ s/fai$/dict/;
my $is_dict = -e $dict_file ? 1 : 0;
if ( $is_dict ) {
  open( my $fh_dict, $dict_file ) or die $!;
  open( my $ph_out, "| bgzip -c > $depth_file" ) or die $!;

  while ( <$fh_dict> ) {
    print $ph_out $_;
  }

  open( my $ph_in, "samtools depth -q 0 -Q 0 $bam_file | $sam_fill_bin $index_file - |") or die $!;

  while ( <$ph_in> ) {
    print $ph_out $_;
  }

  close( $ph_in  ) or die "ERROR: can't close samtools depth pipe $!";
  close( $ph_out ) or die "ERROR: can't close bgzip pipe $!";

  $cmd = "tabix -c \# -c \@ -s 1 -b 2 -e 2 -f $depth_file";
  run_cmd( $cmd );
}
else {
  $cmd = "samtools depth -q 0 -Q 0 $bam_file | $sam_fill_bin $index_file - | bgzip -c > $depth_file";
  run_cmd($cmd);
  $cmd = "tabix -s 1 -b 2 -e 2 -f $depth_file";
  run_cmd( $cmd );
}

sub run_cmd {
  my ( $cmd ) = @_;
  system($cmd) && die "ERROR: failure running $cmd ( $! )";
}

